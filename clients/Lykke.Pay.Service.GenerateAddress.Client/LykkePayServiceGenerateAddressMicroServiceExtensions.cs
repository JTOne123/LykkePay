// Code generated by Microsoft (R) AutoRest Code Generator 1.1.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Lykke.Pay.Service.GenerateAddress.Client
{
    using Lykke.Pay;
    using Lykke.Pay.Service;
    using Lykke.Pay.Service.GenerateAddress;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for LykkePayServiceGenerateAddressMicroService.
    /// </summary>
    public static partial class LykkePayServiceGenerateAddressMicroServiceExtensions
    {
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='request'>
            /// </param>
            public static string ApiGeneratePost(this ILykkePayServiceGenerateAddressMicroService operations, GenerateAddressRequest request = default(GenerateAddressRequest))
            {
                return operations.ApiGeneratePostAsync(request).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='request'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<string> ApiGeneratePostAsync(this ILykkePayServiceGenerateAddressMicroService operations, GenerateAddressRequest request = default(GenerateAddressRequest), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiGeneratePostWithHttpMessagesAsync(request, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static IList<WalletInfo> ApiWalletGet(this ILykkePayServiceGenerateAddressMicroService operations)
            {
                return operations.ApiWalletGetAsync().GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<WalletInfo>> ApiWalletGetAsync(this ILykkePayServiceGenerateAddressMicroService operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiWalletGetWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='changeRequest'>
            /// </param>
            public static void ApiWalletPost(this ILykkePayServiceGenerateAddressMicroService operations, IList<WallerChangeRequest> changeRequest = default(IList<WallerChangeRequest>))
            {
                operations.ApiWalletPostAsync(changeRequest).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='changeRequest'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiWalletPostAsync(this ILykkePayServiceGenerateAddressMicroService operations, IList<WallerChangeRequest> changeRequest = default(IList<WallerChangeRequest>), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiWalletPostWithHttpMessagesAsync(changeRequest, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='merchantId'>
            /// </param>
            public static IList<WalletInfo> ApiWalletByMerchantIdGet(this ILykkePayServiceGenerateAddressMicroService operations, string merchantId)
            {
                return operations.ApiWalletByMerchantIdGetAsync(merchantId).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='merchantId'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<WalletInfo>> ApiWalletByMerchantIdGetAsync(this ILykkePayServiceGenerateAddressMicroService operations, string merchantId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiWalletByMerchantIdGetWithHttpMessagesAsync(merchantId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
