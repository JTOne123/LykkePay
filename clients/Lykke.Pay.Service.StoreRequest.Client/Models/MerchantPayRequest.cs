// Code generated by Microsoft (R) AutoRest Code Generator 1.1.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace Lykke.Pay.Service.StoreRequest.Client.Models
{
    using Lykke.Pay;
    using Lykke.Pay.Service;
    using Lykke.Pay.Service.StoreRequest;
    using Lykke.Pay.Service.StoreRequest.Client;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class MerchantPayRequest
    {
        /// <summary>
        /// Initializes a new instance of the MerchantPayRequest class.
        /// </summary>
        public MerchantPayRequest()
        {
          CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MerchantPayRequest class.
        /// </summary>
        /// <param name="merchantPayRequestStatus">Possible values include:
        /// 'New', 'InProgress', 'Failed', 'Completed'</param>
        /// <param name="merchantPayRequestType">Possible values include:
        /// 'Purchase', 'Transfer'</param>
        /// <param name="merchantPayRequestNotification">Possible values
        /// include: 'Nothing', 'InProgress', 'Success', 'Error'</param>
        public MerchantPayRequest(string merchantId = default(string), string requestId = default(string), string transactionId = default(string), IPayFee markup = default(IPayFee), string merchantPayRequestStatus = default(string), string merchantPayRequestType = default(string), string merchantPayRequestNotification = default(string), string sourceAddress = default(string), string destinationAddress = default(string), string assetPair = default(string), double? amount = default(double?), string assetId = default(string), string successUrl = default(string), string errorUrl = default(string), string progressUrl = default(string), string orderId = default(string), string partitionKey = default(string), string rowKey = default(string), System.DateTime? timestamp = default(System.DateTime?), string eTag = default(string))
        {
            MerchantId = merchantId;
            RequestId = requestId;
            TransactionId = transactionId;
            Markup = markup;
            MerchantPayRequestStatus = merchantPayRequestStatus;
            MerchantPayRequestType = merchantPayRequestType;
            MerchantPayRequestNotification = merchantPayRequestNotification;
            SourceAddress = sourceAddress;
            DestinationAddress = destinationAddress;
            AssetPair = assetPair;
            Amount = amount;
            AssetId = assetId;
            SuccessUrl = successUrl;
            ErrorUrl = errorUrl;
            ProgressUrl = progressUrl;
            OrderId = orderId;
            PartitionKey = partitionKey;
            RowKey = rowKey;
            Timestamp = timestamp;
            ETag = eTag;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "merchantId")]
        public string MerchantId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "requestId")]
        public string RequestId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "transactionId")]
        public string TransactionId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "markup")]
        public IPayFee Markup { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'New', 'InProgress',
        /// 'Failed', 'Completed'
        /// </summary>
        [JsonProperty(PropertyName = "merchantPayRequestStatus")]
        public string MerchantPayRequestStatus { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Purchase', 'Transfer'
        /// </summary>
        [JsonProperty(PropertyName = "merchantPayRequestType")]
        public string MerchantPayRequestType { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Nothing', 'InProgress',
        /// 'Success', 'Error'
        /// </summary>
        [JsonProperty(PropertyName = "merchantPayRequestNotification")]
        public string MerchantPayRequestNotification { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sourceAddress")]
        public string SourceAddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "destinationAddress")]
        public string DestinationAddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "assetPair")]
        public string AssetPair { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "amount")]
        public double? Amount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "assetId")]
        public string AssetId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "successUrl")]
        public string SuccessUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "errorUrl")]
        public string ErrorUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "progressUrl")]
        public string ProgressUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "orderId")]
        public string OrderId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "partitionKey")]
        public string PartitionKey { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "rowKey")]
        public string RowKey { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "timestamp")]
        public System.DateTime? Timestamp { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "eTag")]
        public string ETag { get; set; }

    }
}
